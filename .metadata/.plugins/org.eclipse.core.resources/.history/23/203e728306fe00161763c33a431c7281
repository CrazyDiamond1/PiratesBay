package models;

import java.util.*;

import UserInteraction.UserInput;

public abstract class Island {

	private HashMap<String, Loot> buyables = new HashMap<>();
	private boolean isOwned;

	//changed from "Returns Loot" to "Returns Void"
	
	public void buyItem(Player player) {

		boolean buying = true;
		
		while(buying){
			
		ArrayList<Loot> availableItems = new ArrayList<>();
		ArrayList<String> itemNames = (ArrayList<String>) buyables.keySet();
		
		for(String name : itemNames){
			
			availableItems.add(buyables.get(name));
		}
		
		int choice = UserInput.userResponseToMenu(itemNames.size());
		
		switch(choice){
		
		case 1:
			
			player.setGold(player.getGold()-buyables.get(itemNames.get(1)).getValue());
			buyables.remove(buyables.get(itemNames.get(1)).getName());
			player.getLoot().put(buyables.get(itemNames.get(1)).getName(), buyables.get(itemNames.get(1)));
			break;
		
		}
		}
	}

	//changed from "Returns int" to "Returns Void"
	public void itemToSell(Player player, Loot lootItem) {

		player.setGold(player.getGold()+lootItem.getValue());
		player.getLoot().remove(lootItem.getName());
	}

	public int beingRaided(Character player) {

		return 0;
	}

	public boolean beingAttacked() {

		return false;
	}

	public void recruit() {

		
	}

	public boolean isOwned() {
		return isOwned;
	}

	public void setOwned(boolean isOwned) {
		this.isOwned = isOwned;
	}

	
	
}
